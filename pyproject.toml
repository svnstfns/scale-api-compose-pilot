


[project]
name = "scale-api-compose-pilot"
version = "0.1.0"
description = "Pilot Docker Compose workloads to TrueNAS Scale via WebSocket API - AI-friendly automation tool"
authors = [
    {name = "sst", email = "svnstfns@gmail.com"}
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
keywords = ["truenas", "scale", "docker", "compose", "api", "automation", "pilot", "nas"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "python-dotenv>=0.19.0",
    "pyyaml>=6.0", 
    "websocket-client>=1.0.0",
    "zeroconf>=0.131.0",
    "requests>=2.25.0",
    "keyring>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "types-PyYAML>=6.0.0",
    "types-requests>=2.25.0",
]
docs = [
    "sphinx>=7.0",
    "sphinx-rtd-theme>=2.0",
    "sphinx-autodoc-typehints>=1.24",
]

[project.urls]
Homepage = "https://github.com/svnstfns/scale-api-compose-pilot"
Documentation = "https://github.com/svnstfns/scale-api-compose-pilot#readme"
Repository = "https://github.com/svnstfns/scale-api-compose-pilot.git"
"Bug Tracker" = "https://github.com/svnstfns/scale-api-compose-pilot/issues"

[project.scripts]
scale-compose = "scale_api_compose_pilot.cli:main"
scale-compose-check-path = "scale_api_compose_pilot.path_setup:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["scale_api_compose_pilot*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "RUF100", # unused noqa
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "B018"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "truenas_api_client.*",
    "zeroconf.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
